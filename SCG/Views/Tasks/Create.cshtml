@model SCG.Models.Task

@{
  ViewBag.Title = "Create";
}

<div id="openCreate" class="modal fade" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">New Task</h4>
      </div>
      @using (Html.BeginForm())
      {
        <div class="modal-body">
          @Html.AntiForgeryToken()

          <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
              @Html.LabelFor(model => model.Description, "Task", htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 5, 500, htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.PriorityID, "Priority", htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                @Html.DropDownList("PriorityID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PriorityID, "", new { @class = "text-danger" })
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.TypeID, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                @Html.DropDownList("TypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "text-danger" })
              </div>
            </div>

            @if (ViewBag.Project.Assign == true)
            {
              <div class="form-group">
                @Html.LabelFor(model => model.AssignedTo, "Assign To", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @Html.DropDownList("AssignedTo", null, "-- Choose Assignee --", htmlAttributes: new { @class = "form-control" })
                  @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                </div>
              </div>
            }
            @if (ViewBag.Project.DueDates == true)
            {
              <div class="form-group">
                @Html.LabelFor(model => model.DueDate, "Due Date", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control dt_pckr" } })
                  @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                </div>
              </div>
            }
          </div>
        </div>
        <div class="modal-footer">
          <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
              <input type="submit" value="Create" class="btn btn-success" />
            </div>
          </div>
        </div>
      }
    </div>
  </div>
</div>
<script type="text/javascript">
  $(document).ready(function () {
    $('.dt_pckr').datepicker();
  });
</script>
